#!/usr/bin/env bash
# Copyright (C) 2017 Google Inc.
# Licensed under http://www.apache.org/licenses/LICENSE-2.0 <see LICENSE file>

set -o errexit
set -o nounset

if [[ -z "${1:-}" ]] || [[ -z "${2:-}" ]] || [[ -z "${3:-}" ]]
then
  echo "Usage `basename ${0}` <settings_file> <service-account> <key-file>"
  exit
fi

SETTINGS_FILE="$1"
ACCOUNT="$2"
KEY_FILE="$3"

ENV_OVERRIDE_FILE=${ENV_OVERRIDE_FILE:-"override.sh"}
VERSION="1"
DOMAIN="appspot.com"


write_visible_message () {
  message=${1:-}
  echo '-----'
  echo ${message}
  echo '-----'
}


set +o nounset  # this file is autogenerated thus we don't fix its unset vars
source /vagrant/bin/init_vagrant_env
set -o nounset

write_visible_message 'Generating app.yaml'
deploy_appengine "$SETTINGS_FILE"
cat /vagrant/src/app.yaml

source "$SETTINGS_FILE"
source "$ENV_OVERRIDE_FILE"

HOSTNAME="${APPENGINE_INSTANCE}.${DOMAIN}"

db_migrate

write_visible_message 'Setting project into config'
gcloud config set project "$APPENGINE_INSTANCE"

write_visible_message 'Authenticating'
gcloud auth activate-service-account "$ACCOUNT" --key-file="$KEY_FILE"

write_visible_message "Deploying src/app.yaml into version $VERSION"
gcloud app deploy src/app.yaml --version="$VERSION"

write_visible_message 'Getting openapi spec'
python src/packages/endpoints/endpointscfg.py get_openapi_spec ggrc.cloud_endpoints.api.CloudEndpointsQueryAPI --hostname "$HOSTNAME" -o /vagrant/src

write_visible_message 'Deploying openapi spec'
gcloud service-management deploy src/QueryAPIv1openapi.json

write_visible_message 'Getting service config'
export version_service=(`gcloud service-management configs list --service="$HOSTNAME" --limit 1 | tail -n 1`)
cat >endpoints.sh <<EOF
#!/usr/bin/env bash

ENDPOINTS_SERVICE_VERSION="${version_service[0]}"
ENDPOINTS_SERVICE_NAME="${version_service[1]}"
EOF

write_visible_message 'Making new app.yaml'
deploy_appengine "$SETTINGS_FILE" endpoints.sh
cat /vagrant/src/app.yaml

write_visible_message 'Redeploying with new app.yaml'
gcloud app deploy src/app.yaml --version="$VERSION"
